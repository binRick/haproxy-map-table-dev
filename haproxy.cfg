global
    log         127.0.0.1 local2
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    stats socket /var/lib/haproxy/stats

defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          1m
    timeout server          1m
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 3000

frontend localhost
    bind *:443 ssl crt /etc/ssl/pem
    mode http

    http-request set-header geoip-countrycode %[src,map_ip(/etc/haproxy/geoip.txt)]


    tcp-request connection reject if { src_conn_rate(Abuse) ge 10 }
    tcp-request connection reject if { src_conn_cur(Abuse) ge 10 }
    tcp-request connection track-sc1 src table Abuse
    tcp-request content reject if { src_get_gpc0(Abuse) gt 0 }

    acl 	abuse 			src_http_req_rate(Abuse) 	ge 10
    acl 	flag_abuser 		src_inc_gpc0(Abuse) 		ge 0
    acl 	scanner 		src_http_err_rate(Abuse) 	ge 10
    # Returns a 403 to the abuser and flags for tcp-reject next time
    http-request deny if abuse flag_abuser
    http-request deny if scanner flag_abuser

    stick-table type ip size 1m expire 5m store gpc0

    acl network_allowed src 127.0.0.1 10.187.7.31 10.187.7.7
    http-request add-header X-Customer-ID %[hdr(host),lower,map_str(/etc/haproxy/test.map,0)]

    acl value  req.hdr(X-Value) -m found
    acl key    req.hdr(X-Key) -m found
    acl setmap path /setmap
    acl delmap path /delmap

    http-request deny if !network_allowed setmap || delmap
    http-request set-map(/etc/haproxy/test.map) %[req.hdr(X-Key)]  %[req.hdr(X-Value)]   if setmap value key network_allowed
    http-request del-map(/etc/haproxy/test.map) %[req.hdr(X-Key)]                        if delmap network_allowed

    default_backend nodes


backend Abuse
    stick-table type ip size 1m expire 30m store conn_rate(3s),conn_cur,gpc0,http_req_rate(10s),http_err_rate(20s)

backend nodes
    mode http
    balance roundrobin
    option forwardfor
    option httpchk HEAD / HTTP/1.1\r\nHost:localhost
    server web01 127.0.0.1:9447 check
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }



